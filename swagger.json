{
  "swagger" : "2.0",
  "info" : {
    "version" : "1.0.0",
    "title" : "Brand API",
    "description" : "Delta's API that provides branding informations"
  },
  "host" : "qa-apigateway.delta.com",
  "schemes" : [ "http" ],
  "securityDefinitions" : {
    "OauthSecurity" : {
      "type" : "oauth2",
      "flow" : "application",
      "tokenUrl" : "http://qa-apigateway.delta.com/v1/oauth/token"
    }
  },
  "basePath" : "/v1/brands",
  "paths" : {
    "/products/segments/cos" : {
      "post" : {
        "description" : "Retrieve shopped/purchased/flown brand/products for a specified class of service within a segment\n",
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "type" : "string",
          "default" : "Bearer xxxxx",
          "description" : "Access token authorization. Example: Bearer V2hS4VDBLNtJBouLfwr321ESWGul",
          "required" : true
        }, {
          "name" : "Content-Type",
          "in" : "header",
          "type" : "string",
          "default" : "application/json",
          "description" : "The MIME Type for the request. Example: application/json, text/xml",
          "required" : true
        }, {
          "name" : "Accept",
          "in" : "header",
          "type" : "string",
          "default" : "application/json",
          "description" : "The format (MIME type) of the response. Example: application/json, text/xml",
          "required" : true
        }, {
          "name" : "TransactionID",
          "in" : "header",
          "type" : "string",
          "description" : "A unique id for each request generated by each application",
          "required" : true
        }, {
          "name" : "ChannelID",
          "in" : "header",
          "type" : "string",
          "description" : "The ID of the channel making the request",
          "required" : true
        }, {
          "name" : "AppID",
          "in" : "header",
          "type" : "string",
          "description" : "The ID of the application within the channel making the request",
          "required" : true
        }, {
          "name" : "BrandRQ",
          "in" : "body",
          "description" : "Brand API request object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/BrandRQ"
          }
        } ],
        "security" : [ {
          "OauthSecurity" : [ ]
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/BrandRS"
            }
          },
          "207" : {
            "description" : "Response with Warnings â€“ It is a successful response but one or more segments may have warnings.",
            "schema" : {
              "$ref" : "#/definitions/BrandRS"
            }
          },
          "400" : {
            "description" : "Invalid Request. Mandatory data missing or invalid date format or any invalid input.",
            "schema" : {
              "$ref" : "#/definitions/BrandRS"
            }
          },
          "500" : {
            "description" : "Internal Server Error. System down or any runtime error.",
            "schema" : {
              "$ref" : "#/definitions/BrandRS"
            }
          }
        }
      }
    }
  },
  "definitions" : {
    "BrandProductBySegRQ" : {
      "type" : "object",
      "required" : [ "BrandProductBySeg" ],
      "properties" : {
        "BrandProductBySeg" : {
          "type" : "array",
          "description" : "List of segments for which the brand/product information is being requested",
          "minItems" : 1,
          "items" : {
            "$ref" : "#/definitions/BrandProductBySegType"
          }
        },
        "CustomerInfo" : {
          "type" : "array",
          "description" : "List of customer information for which the brand/product information is being requested",
          "items" : {
            "$ref" : "#/definitions/CustomerInfoType"
          }
        }
      }
    },
    "BrandRQ" : {
      "type" : "object",
      "description" : "Brand API request object",
      "properties" : {
        "BrandProductRQType" : {
          "$ref" : "#/definitions/BrandProductBySegRQ"
        }
      }
    },
    "BrandRS" : {
      "type" : "object",
      "description" : "Brand API response object.\n1) For generic brand/product request, the list of brands/products will be returned as BrandProductRS.\n2) For brand/product request by segment/s, the list of brands/products by segment/leg will be returned as BrandProductBySegRS.\n3) For brand/product request by class of service, the list of brands/products for a specific class of service within a segment/leg will be returned as BrandProductBySegRS.\n",
      "properties" : {
        "BrandProductRS" : {
          "$ref" : "#/definitions/BrandProductRS"
        },
        "BrandProductBySegRS" : {
          "$ref" : "#/definitions/BrandProductBySegRS"
        },
        "ErrorRS" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ErrorType"
          }
        }
      }
    },
    "BrandProductRS" : {
      "type" : "object",
      "description" : "Generic brand/product information",
      "properties" : {
        "TransactionID" : {
          "type" : "string",
          "description" : "Transaction ID"
        },
        "BrandProduct" : {
          "type" : "array",
          "description" : "List of generic brands and its associated products",
          "items" : {
            "$ref" : "#/definitions/BrandProductType"
          }
        },
        "Warnings" : {
          "type" : "array",
          "description" : "List of warning messages",
          "items" : {
            "$ref" : "#/definitions/MessageType"
          }
        }
      }
    },
    "BrandProductBySegRS" : {
      "type" : "object",
      "description" : "Brand/product information for a single or multiple segments",
      "properties" : {
        "TransactionID" : {
          "type" : "string",
          "description" : "Transaction ID"
        },
        "Segments" : {
          "type" : "array",
          "description" : "List of segments containing brand/product information",
          "minItems" : 1,
          "items" : {
            "$ref" : "#/definitions/BrandProductBySegRSType"
          }
        },
        "Warnings" : {
          "type" : "array",
          "description" : "List of warning messages",
          "items" : {
            "$ref" : "#/definitions/MessageType"
          }
        }
      }
    },
    "BrandProductBySegType" : {
      "required" : [ "SegOrigDest", "CarrierType" ],
      "properties" : {
        "SegOrigDest" : {
          "$ref" : "#/definitions/OrigDestBaseType"
        },
        "CarrierType" : {
          "type" : "array",
          "description" : "Operated and marketed carrier information",
          "minItems" : 1,
          "maxItems" : 2,
          "items" : {
            "$ref" : "#/definitions/CarrierType"
          }
        },
        "Traveler" : {
          "type" : "array",
          "description" : "List of travelers",
          "items" : {
            "$ref" : "#/definitions/TravelerType"
          }
        }
      }
    },
    "BrandProductType" : {
      "description" : "Information about a brand and its products",
      "required" : [ "BrandInfo" ],
      "properties" : {
        "BrandInfo" : {
          "$ref" : "#/definitions/ProductInfoType"
        },
        "ProductInfo" : {
          "type" : "array",
          "description" : "List of products for a given brand",
          "items" : {
            "$ref" : "#/definitions/ProductInfoType"
          }
        }
      }
    },
    "BrandProductBySegRSType" : {
      "description" : "Response containing a segment and its flight legs with brand/product information",
      "required" : [ "DominantLegIndex", "FlightLegs", "SegOrigDest" ],
      "properties" : {
        "SegmentID" : {
          "type" : "string"
        },
        "DominantLegIndex" : {
          "type" : "integer",
          "description" : "Index of the segment's dominant leg"
        },
        "International" : {
          "type" : "boolean",
          "description" : "Indicator if the segment is international or not"
        },
        "SegOrigDest" : {
          "$ref" : "#/definitions/OrigDestBaseType"
        },
        "FlightLegs" : {
          "type" : "array",
          "description" : "List of flight legs in the segment",
          "minItems" : 1,
          "items" : {
            "$ref" : "#/definitions/FlightLeg"
          }
        }
      }
    },
    "AircraftType" : {
      "type" : "object",
      "description" : "Aircraft information",
      "properties" : {
        "Fleet" : {
          "type" : "string",
          "description" : "Aircraft's fleet"
        },
        "SubFleet" : {
          "type" : "string",
          "description" : "Aircraft's subfleet"
        },
        "Description" : {
          "type" : "string",
          "description" : "Aircraft's description"
        }
      }
    },
    "CarrierType" : {
      "description" : "Carrier Information",
      "required" : [ "Airline", "FlightNumber" ],
      "properties" : {
        "Airline" : {
          "type" : "string",
          "pattern" : "[A-Z0-9]{2}",
          "description" : "Airline code"
        },
        "FlightNumber" : {
          "type" : "string",
          "pattern" : "[0-9]{0,4}",
          "description" : "Flight number"
        },
        "ClassOfService" : {
          "type" : "string",
          "pattern" : "$|([A-Za-z][A-Za-z]?)",
          "description" : "Class of service"
        },
        "Type" : {
          "type" : "string",
          "enum" : [ "OPERATED", "MARKETED" ],
          "default" : "OPERATED",
          "description" : "Carrier type"
        }
      }
    },
    "ContentURL" : {
      "type" : "object",
      "description" : "Link Information for Content API",
      "required" : [ "href" ],
      "properties" : {
        "href" : {
          "type" : "string",
          "description" : "Content API URL for a specific brand/product ID"
        },
        "Payload" : {
          "type" : "string",
          "description" : "Request payload of a specific brand/product ID"
        }
      }
    },
    "CustomerInfoType" : {
      "description" : "Customer information",
      "properties" : {
        "LoyNumber" : {
          "$ref" : "#/definitions/LoyInfoType"
        },
        "AgentID" : {
          "type" : "string",
          "description" : "Travel agent ID"
        },
        "CorporateID" : {
          "type" : "string"
        },
        "Persona" : {
          "type" : "array",
          "description" : "For future use",
          "items" : {
            "type" : "string"
          }
        },
        "CustomerID" : {
          "type" : "string",
          "description" : "For future use"
        }
      }
    },
    "ErrorType" : {
      "type" : "object",
      "properties" : {
        "Code" : {
          "type" : "string"
        },
        "Description" : {
          "type" : "string"
        },
        "DocURI" : {
          "type" : "string"
        },
        "Id" : {
          "type" : "integer"
        }
      }
    },
    "FlightLeg" : {
      "description" : "Flight leg information and its list of associated brands/products",
      "required" : [ "Dominant", "OriginDest", "CarrierType" ],
      "properties" : {
        "SegmentID" : {
          "type" : "string"
        },
        "FlightLegID" : {
          "type" : "string"
        },
        "Dominant" : {
          "type" : "boolean",
          "description" : "1) If the segment has one leg, then this will default to 'true'\n2) If the segment has two or more legs, then this will be set to true for the leg with the longest distance\n",
          "default" : true
        },
        "International" : {
          "type" : "boolean",
          "description" : "Indicator if the leg is international or not"
        },
        "TransContinental" : {
          "type" : "boolean",
          "description" : "Indicator if the leg is transcontinental or not"
        },
        "OriginDest" : {
          "$ref" : "#/definitions/OrigDestBaseType"
        },
        "CarrierType" : {
          "type" : "array",
          "description" : "Operated and marketed carrier information",
          "minItems" : 1,
          "maxItems" : 2,
          "items" : {
            "$ref" : "#/definitions/CarrierType"
          }
        },
        "Aircraft" : {
          "$ref" : "#/definitions/AircraftType"
        },
        "BrandProduct" : {
          "type" : "array",
          "description" : "List of brands/products for this leg",
          "items" : {
            "$ref" : "#/definitions/BrandProductType"
          }
        },
        "ContentInfo" : {
          "$ref" : "#/definitions/ContentURL"
        },
        "ArrivalDate" : {
          "type" : "string",
          "pattern" : "\\d{4}-\\d{2}-\\d{2}"
        },
        "ArrivalTime" : {
          "type" : "string",
          "pattern" : "\\d{2}:\\d{2}"
        }
      }
    },
    "LoyInfoType" : {
      "type" : "object",
      "description" : "Frequent flyer information",
      "required" : [ "LoyNumber" ],
      "properties" : {
        "LoyNumber" : {
          "type" : "string",
          "description" : "Loyalty number"
        },
        "LoyStatus" : {
          "type" : "string",
          "description" : "Loyalty status"
        },
        "PartnerStatus" : {
          "type" : "array",
          "description" : "List of Frequent Flyer Partner Information",
          "items" : {
            "$ref" : "#/definitions/PartnerInfoType"
          }
        }
      }
    },
    "MessageType" : {
      "properties" : {
        "Code" : {
          "type" : "string"
        },
        "Description" : {
          "type" : "string"
        },
        "DocURL" : {
          "type" : "string"
        },
        "Id" : {
          "type" : "integer",
          "description" : "ID of the segment that contains this warning/message"
        }
      }
    },
    "OrigDestBaseType" : {
      "type" : "object",
      "description" : "Segment information",
      "required" : [ "Origin", "Destination", "SchedLocalDepartDate" ],
      "properties" : {
        "Origin" : {
          "type" : "string",
          "pattern" : "[A-Z]{3}",
          "description" : "The origin of a segment.\n\nSegment Definition:\nThe International Air Transport Association (IATA), the international trade body for airlines around the world, defines a flight segment as the operation of a flight with a single flight designator between the point where passengers first board an aircraft and the passengers' final destination. A flight designator includes an airline code, which has two letters or a number and a letter in combination, and a flight number of up to four digits. A flight segment can include any number of stops where passengers board and deplane the aircraft operated by a single airline.\nExample: The trip MSP-SIN  has 2 segments and they are:\n  Segment 1: MSP-SEA = DL589\n  Segment 2: SEA-SIN = DL167  (THRU flight connecting/stopping in NRT)\n  \n  And Segment 2 has two flight legs and they are:\n     Leg 1: SEA-NRT (DL167)\n     Leg 2: NRT-SIN (DL167)\n"
        },
        "Destination" : {
          "type" : "string",
          "pattern" : "[A-Z]{3}",
          "description" : "The destination of a segment.\n\nSegment Definition:\nThe International Air Transport Association (IATA), the international trade body for airlines around the world, defines a flight segment as the operation of a flight with a single flight designator between the point where passengers first board an aircraft and the passengers' final destination. A flight designator includes an airline code, which has two letters or a number and a letter in combination, and a flight number of up to four digits. A flight segment can include any number of stops where passengers board and deplane the aircraft operated by a single airline.\nExample: The trip MSP-SIN  has 2 segments and they are:\n  Segment 1: MSP-SEA = DL589\n  Segment 2: SEA-SIN = DL167  (THRU flight connecting/stopping in NRT)\n  \n  And Segment 2 has two flight legs and they are:\n     Leg 1: SEA-NRT (DL167)\n     Leg 2: NRT-SIN (DL167)\n"
        },
        "SchedLocalDepartDate" : {
          "type" : "string",
          "pattern" : "\\d{4}-\\d{2}-\\d{2}",
          "description" : "Scheduled local departure date of a segment"
        },
        "SchedLocalDepartTime" : {
          "type" : "string",
          "pattern" : "\\d{2}:\\d{2}",
          "description" : "Scheduled local departure time of a segment"
        },
        "RequestDate" : {
          "type" : "string",
          "pattern" : "\\d{4}-\\d{2}-\\d{2}",
          "description" : "It could be a ticket purchase date or transaction date or flown date of the flight. If this date is passed in, the API will return the brand/products for that day and for a specific flight. If NOT, then it will default to current local date."
        }
      }
    },
    "PartnerInfoType" : {
      "description" : "Partner information",
      "properties" : {
        "Code" : {
          "type" : "string",
          "description" : "Partner code"
        },
        "Status" : {
          "type" : "string",
          "description" : "Partner status"
        }
      }
    },
    "ProductInfoType" : {
      "type" : "object",
      "description" : "Brand or product information",
      "required" : [ "ID", "Type" ],
      "properties" : {
        "ID" : {
          "type" : "string",
          "description" : "Brand/product ID"
        },
        "Category" : {
          "type" : "string",
          "description" : "Brand/product category"
        },
        "Type" : {
          "type" : "string",
          "description" : "Brand/product type"
        },
        "SubType" : {
          "type" : "string",
          "description" : "Brand/product subtype"
        },
        "ShortDescription" : {
          "type" : "string",
          "description" : "Brand/product short description"
        },
        "LongDescription" : {
          "type" : "string",
          "description" : "Brand/product long description"
        }
      }
    },
    "TravelerType" : {
      "description" : "For future use",
      "properties" : {
        "PTC" : {
          "type" : "string",
          "description" : "Passenger Type Code",
          "default" : "ADT",
          "enum" : [ "ADT", "CNN", "INS", "INF", "GVT", "FFY", "CMP", "CMA", "SPS", "BUD", "PFD", "PFG", "PRR", "PRG", "CLG", "MIS", "SRC", "REC", "MIL", "STU", "UNN", "MNN", "YTH", "CTZ", "SKY", "PFP", "PFM", "PRP" ]
        },
        "Age" : {
          "type" : "integer",
          "description" : "Traveler's age"
        },
        "BirthDate" : {
          "type" : "string",
          "pattern" : "\\d{4}-\\d{2}-\\d{2}",
          "description" : "Traveler's date of birth"
        }
      }
    }
  }
}